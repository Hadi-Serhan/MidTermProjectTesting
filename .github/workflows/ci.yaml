name: CI (API)

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  api-aws:
    runs-on: ubuntu-latest

    env:
      VAULTWARDEN_URL: ${{ secrets.VW_BASE_URL }}          # e.g. https://<your-reserved>.ngrok-free.app
      CLIENT_ID:        ${{ secrets.VW_CLIENT_ID }}        # from Vaultwarden → Settings → Keys
      CLIENT_SECRET:    ${{ secrets.VW_CLIENT_SECRET }}    # from Vaultwarden → Settings → Keys

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest-html pytest-metadata python-dotenv requests

      - name: Sanity check secrets
        run: |
          test -n "${VAULTWARDEN_URL}" || (echo "VW_BASE_URL secret missing" >&2; exit 1)
          test -n "${CLIENT_ID}"       || (echo "VW_CLIENT_ID secret missing" >&2; exit 1)
          test -n "${CLIENT_SECRET}"   || (echo "VW_CLIENT_SECRET secret missing" >&2; exit 1)

      - name: Wait for target /alive (ngrok-aware)
        run: |
          set -euo pipefail
          URL="${VAULTWARDEN_URL%/}/alive?ngrok-skip-browser-warning=true"
          echo "Probing: $URL"
          for i in {1..120}; do
            CODE=$(curl -sS -L \
              -H "ngrok-skip-browser-warning: true" \
              -A "vw-ci-bot/1.0" \
              -o resp.html -w "%{http_code}" \
              "$URL" || echo 000)

            if [ "$CODE" = "200" ]; then
              echo "Target is up (200): ${VAULTWARDEN_URL}"
              rm -f resp.html
              exit 0
            fi

            # First-hit ngrok interstitial sometimes returns 400; accept it as 'up'
            if [ "$CODE" = "400" ] && grep -qi "ngrok" resp.html; then
              echo "Ngrok interstitial detected (400) — treating as UP."
              rm -f resp.html
              exit 0
            fi

            sleep 2
          done
          echo "Target did not become healthy in time: ${VAULTWARDEN_URL}" >&2
          sed -n '1,120p' resp.html || true
          rm -f resp.html
          exit 1

      - name: Run API tests (ALL)
        run: |
          mkdir -p reports
          # No -k filter → run ALL tests in tests/api, including those that require CLIENT_ID/SECRET
          python -m pytest tests/api \
            --maxfail=1 \
            --junitxml=reports/junit-api.xml \
            --html=reports/report-api.html --self-contained-html \
            -q

      - name: Upload API reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-reports
          path: reports/*
