name: API CI

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: write   # commit Allure to main:/docs/ci

concurrency:
  group: pages-main          # serialize pushes that touch /docs
  cancel-in-progress: false

jobs:
  test-api:
    runs-on: ubuntu-latest
    env:
      VAULTWARDEN_URL: ${{ secrets.VW_BASE_URL }}
      CLIENT_ID:       ${{ secrets.VW_CLIENT_ID }}
      CLIENT_SECRET:   ${{ secrets.VW_CLIENT_SECRET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y rsync

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest-html pytest-metadata allure-pytest

      - name: Wait for target /alive (ngrok-aware)
        run: |
          set -euo pipefail
          URL="${VAULTWARDEN_URL%/}/alive?ngrok-skip-browser-warning=true"
          echo "Probing: $URL"
          for i in {1..120}; do
            CODE=$(curl -sS -L \
              -H "ngrok-skip-browser-warning: true" \
              -A "vw-ci-bot/1.0" \
              -o resp.html -w "%{http_code}" \
              "$URL" || echo 000)
            if [ "$CODE" = "200" ]; then
              echo "Target is up (200): ${VAULTWARDEN_URL}"
              rm -f resp.html; exit 0
            fi
            if [ "$CODE" = "400" ] && grep -qi "ngrok" resp.html; then
              echo "Ngrok interstitial detected â€” treating as UP."
              rm -f resp.html; exit 0
            fi
            sleep 2
          done
          echo "Target did not become healthy in time: ${VAULTWARDEN_URL}" >&2
          sed -n '1,120p' resp.html || true
          rm -f resp.html
          exit 1

      - name: Run API tests (Allure results)
        run: |
          mkdir -p reports allure-results
          python -m pytest tests/api \
            --maxfail=1 \
            --alluredir=allure-results \
            --junitxml=reports/junit-api.xml \
            --html=reports/report-api.html --self-contained-html \
            -q

      - name: Upload raw reports (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-reports
          path: |
            reports/*
            allure-results/*

      - name: Setup Node (for Allure CLI)
        if: always()
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Allure CLI
        if: always()
        run: npm i -g allure-commandline@2.30.0 --no-progress

      - name: Generate Allure HTML
        if: always()
        run: allure generate allure-results -o allure-report --clean

      # Publish into /docs/ci without touching /docs/ui
      - name: Commit Allure report to /docs/ci (main)
        if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          set -euo pipefail
          mkdir -p docs/ci
          rsync -a --delete allure-report/ docs/ci/
          # create a simple index if missing
          if [ ! -f docs/index.html ]; then
            cat > docs/index.html <<'HTML'
            <!doctype html><meta charset="utf-8">
            <title>Allure Reports</title>
            <h1>Allure Reports</h1>
            <ul>
              <li><a href="./ci/">API CI Report</a></li>
              <li><a href="./ui/">UI Manual Report</a></li>
            </ul>
            HTML
          fi
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/ci docs/index.html
          git diff --cached --quiet && { echo "No changes to commit."; exit 0; }
          git commit -m "docs(ci): publish Allure report to /docs/ci [skip ci]"
          git pull --rebase
          git push
