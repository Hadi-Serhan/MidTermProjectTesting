name: UI Tests (manual)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Where to run UI tests'
        required: true
        type: choice
        default: 'aws'
        options:
          - aws
          - local
      headless:
        description: 'Run browser headless'
        required: true
        type: choice
        default: 'true'
        options:
          - 'true'
          - 'false'
      base_url:
        description: 'Override VAULTWARDEN_URL (optional)'
        required: false

permissions:
  contents: read

jobs:
  # -------------------------
  # Local run (starts service)
  # -------------------------
  ui-local:
    if: ${{ github.event.inputs.environment == 'local' }}
    runs-on: ubuntu-latest

    services:
      vaultwarden:
        image: vaultwarden/server:latest
        ports:
          - 3000:80
        env:
          SIGNUPS_ALLOWED: "true"
          WEBSOCKET_ENABLED: "true"
          I_REALLY_WANT_VOLATILE_STORAGE: "true"
        options: >-
          --health-cmd "curl -fsS http://localhost:80/alive || exit 1"
          --health-interval=5s
          --health-retries=30
          --health-timeout=3s
          --health-start-period=5s

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y curl xvfb

      - name: Install Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Resolve target URL: base_url input if provided, else local service
      - name: Resolve VAULTWARDEN_URL
        run: |
          if [ -n "${{ github.event.inputs.base_url }}" ]; then
            echo "VAULTWARDEN_URL=${{ github.event.inputs.base_url }}" >> $GITHUB_ENV
          else
            echo "VAULTWARDEN_URL=http://localhost:3000" >> $GITHUB_ENV
          fi
          echo "HEADLESS=${{ github.event.inputs.headless }}" >> $GITHUB_ENV

      - name: Wait for local Vaultwarden
        run: |
          for i in {1..90}; do
            if curl -fsS "${VAULTWARDEN_URL}/alive" >/dev/null; then
              echo "Vaultwarden is up."
              exit 0
            fi
            sleep 2
          done
          echo "Vaultwarden did not become healthy in time" >&2
          docker ps -a || true
          exit 1

      - name: Run UI tests (xvfb)
        run: |
          mkdir -p reports
          xvfb-run -a python -m pytest -q tests/ui \
            --maxfail=1 \
            --html=reports/ui.html --self-contained-html \
            --junitxml=reports/ui-junit.xml

      - name: Upload UI report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-reports-local
          path: reports/*
          retention-days: 14

  # -------------------------
  # AWS run (no service)
  # -------------------------
  ui-aws:
    if: ${{ github.event.inputs.environment == 'aws' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y curl xvfb

      - name: Install Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Resolve URL: base_url input > secret VW_BASE_URL
      - name: Resolve VAULTWARDEN_URL
        run: |
          if [ -n "${{ github.event.inputs.base_url }}" ]; then
            echo "VAULTWARDEN_URL=${{ github.event.inputs.base_url }}" >> $GITHUB_ENV
          elif [ -n "${{ secrets.VW_BASE_URL }}" ]; then
            echo "VAULTWARDEN_URL=${{ secrets.VW_BASE_URL }}" >> $GITHUB_ENV
          else
            echo "VW_BASE_URL secret not set and no base_url input provided." >&2
            exit 1
          fi
          echo "HEADLESS=${{ github.event.inputs.headless }}" >> $GITHUB_ENV
          echo "VW_EMAIL=${{ secrets.VW_EMAIL }}" >> $GITHUB_ENV
          echo "VW_PASSWORD=${{ secrets.VW_PASSWORD }}" >> $GITHUB_ENV

      - name: Sanity check AWS endpoint
        run: |
          curl -fsSI "${VAULTWARDEN_URL}/alive" || (echo "Endpoint not reachable" >&2; exit 1)

      - name: Run UI tests (xvfb)
        run: |
          mkdir -p reports
          xvfb-run -a python -m pytest -q tests/ui \
            --maxfail=1 \
            --html=reports/ui.html --self-contained-html \
            --junitxml=reports/ui-junit.xml

      - name: Upload UI report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-reports-aws
          path: reports/*
          retention-days: 14
